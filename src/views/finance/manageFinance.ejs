<%- include('../partials/header') %>

<div class="row fade-in responsive-page-row gy-4">
    <% const currencyFormatter = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }); %>
    <% const projectionList = Array.isArray(financeProjections) ? financeProjections : []; %>
    <% const highlightProjection = projectionHighlight; %>
    <% const alertsList = Array.isArray(projectionAlerts) ? projectionAlerts : []; %>
    <div class="col-12">
        <div class="card card-soft responsive-panel">
            <div class="d-flex flex-column flex-lg-row align-items-lg-center justify-content-between gap-3">
                <div>
                    <span class="app-chip mb-2"><i class="bi bi-cash-stack me-2"></i>Saúde financeira</span>
                    <h2 class="fw-semibold mb-2">Gerenciar finanças estratégicas</h2>
                    <p class="text-muted mb-0">
                        Acompanhe lançamentos, status e recorrências com visibilidade completa para decisões rápidas.
                    </p>
                </div>
                <div class="text-muted small text-lg-end">
                    Lançamentos cadastrados<br />
                    <span class="fw-semibold text-primary"><%= entries.length %></span>
                </div>
            </div>

            <% if (success_msg) { %>
                <div class="alert alert-success alert-auto mt-4" data-auto-dismiss="5000">
                    <i class="bi bi-check-circle me-2"></i><%= success_msg %>
                </div>
            <% } else if (error_msg) { %>
                <div class="alert alert-danger alert-auto mt-4" data-auto-dismiss="5000">
                    <i class="bi bi-exclamation-triangle me-2"></i><%= error_msg %>
                </div>
            <% } %>
        </div>
    </div>

    <div class="col-12 col-xxl-8">
        <div class="card card-soft responsive-panel">
            <div class="card-body">
                <div class="d-flex flex-column flex-lg-row justify-content-between gap-3 mb-3">
                    <div>
                        <h3 class="fw-semibold mb-1">Metas e projeções</h3>
                        <p class="text-muted mb-0">Acompanhe se o saldo projetado atende as metas mensais configuradas.</p>
                    </div>
                    <div class="text-lg-end">
                        <span class="badge rounded-pill bg-light text-muted me-2">
                            <i class="bi bi-calendar-week me-1"></i>
                            <%= projectionList.length %> períodos monitorados
                        </span>
                        <span class="badge rounded-pill <%= goalSummary && goalSummary.alerts ? 'bg-warning-subtle text-warning' : 'bg-success-subtle text-success' %>">
                            <i class="bi bi-bullseye me-1"></i>
                            <%= goalSummary && goalSummary.alerts ? `${goalSummary.alerts} meta(s) em atenção` : 'Metas sob controle' %>
                        </span>
                    </div>
                </div>

                <% if (alertsList.length) { %>
                    <div class="alert alert-warning border-0 d-flex align-items-center gap-2" role="alert">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        <span>
                            <strong><%= alertsList.length %></strong>
                            <%= alertsList.length === 1 ? 'meta' : 'metas' %> com projeção abaixo do objetivo.
                        </span>
                    </div>
                <% } %>

                <div class="projection-highlight border rounded-3 p-3 bg-light-subtle mb-3">
                    <% if (highlightProjection) { %>
                        <% const highlightGoal = highlightProjection.goal || {}; %>
                        <% const highlightGap = (typeof highlightGoal.gapToGoal === 'number') ? highlightGoal.gapToGoal : null; %>
                        <% const gapLabel = highlightGap !== null ? `${highlightGap >= 0 ? '+' : '-'}${currencyFormatter.format(Math.abs(highlightGap))}` : '—'; %>
                        <% const gapClass = highlightGap !== null ? (highlightGap >= 0 ? 'text-success' : 'text-danger') : 'text-muted'; %>
                        <% const statusClass = highlightGoal.achieved === true ? 'badge bg-success-subtle text-success' : highlightGoal.achieved === false ? 'badge bg-danger-subtle text-danger' : 'badge bg-secondary-subtle text-secondary'; %>
                        <div class="d-flex flex-wrap align-items-center justify-content-between gap-3">
                            <div>
                                <p class="text-muted small mb-1">Próxima meta monitorada</p>
                                <h4 class="fw-semibold mb-0"><%= highlightProjection.label || highlightProjection.month %></h4>
                            </div>
                            <div class="text-end">
                                <div class="fw-semibold"><%= currencyFormatter.format(Number(highlightProjection.projected?.net || 0)) %></div>
                                <div class="text-muted small">
                                    Meta: <span class="fw-semibold"><%= highlightGoal.targetNetAmount !== null && highlightGoal.targetNetAmount !== undefined ? currencyFormatter.format(Number(highlightGoal.targetNetAmount)) : '—' %></span>
                                </div>
                                <div class="text-muted small">
                                    Diferença: <span class="fw-semibold <%= gapClass %>"><%= gapLabel %></span>
                                </div>
                                <span class="<%= statusClass %>">
                                    <%= highlightGoal.achieved === true ? 'Meta atingida' : highlightGoal.achieved === false ? 'Meta em risco' : 'Meta registrada' %>
                                </span>
                            </div>
                        </div>
                    <% } else { %>
                        <p class="text-muted small mb-0">Cadastre uma meta mensal para visualizar projeções detalhadas.</p>
                    <% } %>
                </div>

                <div class="table-responsive table-modern responsive-table">
                    <table class="table table-sm align-middle mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Mês</th>
                                <th>Saldo projetado</th>
                                <th>Meta líquida</th>
                                <th>Diferença</th>
                                <th class="text-center">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (!projectionList.length) { %>
                                <tr>
                                    <td colspan="5" class="text-center text-muted small">Nenhuma projeção disponível.</td>
                                </tr>
                            <% } else { %>
                                <% projectionList.forEach((item) => { %>
                                    <% const goal = item.goal || {}; %>
                                    <% const gapValue = (typeof goal.gapToGoal === 'number') ? goal.gapToGoal : null; %>
                                    <% const gapLabel = gapValue !== null ? `${gapValue >= 0 ? '+' : '-'}${currencyFormatter.format(Math.abs(gapValue))}` : '—'; %>
                                    <% const gapClass = gapValue !== null ? (gapValue >= 0 ? 'text-success' : 'text-danger') : 'text-muted'; %>
                                    <% const rowClass = item.needsAttention ? 'table-warning' : (item.isCurrent ? 'table-active' : ''); %>
                                    <% const statusLabel = goal.achieved === true ? 'Meta atingida' : goal.achieved === false ? 'Meta em risco' : goal.targetNetAmount !== null && goal.targetNetAmount !== undefined ? 'Meta registrada' : 'Sem meta'; %>
                                    <% const statusClass = goal.achieved === true ? 'badge bg-success-subtle text-success' : goal.achieved === false ? 'badge bg-danger-subtle text-danger' : goal.targetNetAmount !== null && goal.targetNetAmount !== undefined ? 'badge bg-secondary-subtle text-secondary' : 'badge bg-light text-muted'; %>
                                    <tr class="<%= rowClass %>">
                                        <td><%= item.label || item.month %></td>
                                        <td><%= currencyFormatter.format(Number(item.projected?.net || 0)) %></td>
                                        <td><%= goal.targetNetAmount !== null && goal.targetNetAmount !== undefined ? currencyFormatter.format(Number(goal.targetNetAmount)) : '—' %></td>
                                        <td class="<%= gapClass %>"><%= gapLabel %></td>
                                        <td class="text-center"><span class="<%= statusClass %>"><%= statusLabel %></span></td>
                                    </tr>
                                <% }) %>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-xxl-4">
        <div class="card card-soft responsive-panel h-100">
            <div class="card-body">
                <h4 class="fw-semibold mb-3">Configurar metas mensais</h4>
                <form action="/finance/goals" method="POST" class="row g-3">
                    <div class="col-12">
                        <label class="form-label">Mês da meta</label>
                        <input type="month" class="form-control" name="month" value="<%= highlightProjection ? highlightProjection.month : '' %>" required />
                    </div>
                    <div class="col-12">
                        <label class="form-label">Saldo líquido desejado (R$)</label>
                        <input type="number" step="0.01" min="0" class="form-control" name="targetNetAmount" placeholder="Ex.: 15000" required />
                    </div>
                    <div class="col-12">
                        <label class="form-label">Notas (opcional)</label>
                        <textarea class="form-control" name="notes" rows="2" maxlength="255" placeholder="Reforços ou observações"></textarea>
                    </div>
                    <div class="col-12 d-flex justify-content-end gap-2">
                        <button type="reset" class="btn btn-outline-secondary btn-sm">Limpar</button>
                        <button type="submit" class="btn btn-gradient btn-sm">Salvar meta</button>
                    </div>
                </form>

                <hr class="my-4" />

                <h5 class="fw-semibold mb-3">Metas cadastradas</h5>
                <% if (!financeGoals.length) { %>
                    <p class="text-muted small mb-0">Nenhuma meta cadastrada até o momento.</p>
                <% } else { %>
                    <div class="list-group list-group-flush">
                        <% financeGoals.forEach((goal) => { %>
                            <div class="list-group-item px-0">
                                <div class="d-flex flex-column gap-2">
                                    <div class="d-flex justify-content-between align-items-start gap-3">
                                        <div>
                                            <h6 class="fw-semibold mb-1"><%= goal.monthLabel %></h6>
                                            <p class="text-muted small mb-1">Meta: <span class="fw-semibold"><%= goal.formattedAmount %></span></p>
                                            <% if (goal.notes) { %>
                                                <p class="text-muted small mb-0"><i class="bi bi-chat-left-text me-1"></i><%= goal.notes %></p>
                                            <% } %>
                                        </div>
                                        <div class="d-flex gap-2">
                                            <button class="btn btn-outline-primary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#goalEdit<%= goal.id %>" aria-expanded="false" aria-controls="goalEdit<%= goal.id %>">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <form action="/finance/goals/<%= goal.id %>?_method=DELETE" method="POST" class="d-inline">
                                                <button class="btn btn-outline-danger btn-sm" type="submit">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="collapse" id="goalEdit<%= goal.id %>">
                                        <form action="/finance/goals" method="POST" class="row g-3 mt-2">
                                            <input type="hidden" name="goalId" value="<%= goal.id %>" />
                                            <div class="col-12">
                                                <label class="form-label">Mês</label>
                                                <input type="month" class="form-control" name="month" value="<%= goal.monthKey %>" required />
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label">Meta líquida (R$)</label>
                                                <input type="number" step="0.01" min="0" class="form-control" name="targetNetAmount" value="<%= goal.targetNetAmountInput %>" required />
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label">Notas</label>
                                                <textarea class="form-control" name="notes" rows="2" maxlength="255"><%= goal.notes %></textarea>
                                            </div>
                                            <div class="col-12 d-flex justify-content-end gap-2">
                                                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="collapse" data-bs-target="#goalEdit<%= goal.id %>">Cancelar</button>
                                                <button type="submit" class="btn btn-gradient btn-sm">Atualizar meta</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="card card-soft responsive-panel">
            <div class="d-flex flex-wrap justify-content-between align-items-center gap-3 mb-3">
                <div>
                    <h3 class="fw-semibold mb-1">Lançamentos recentes</h3>
                    <p class="text-muted mb-0">Monitoramento contínuo de receitas, despesas e recorrências.</p>
                </div>
                <div class="d-flex flex-column flex-sm-row align-items-sm-center justify-content-end gap-2 text-sm-end">
                    <span class="badge rounded-pill bg-light text-muted">
                        <i class="bi bi-shield-lock me-2" aria-hidden="true"></i>Auditoria ativa
                    </span>
                    <div
                        class="d-flex flex-wrap align-items-center justify-content-end gap-2"
                        role="group"
                        aria-label="Exportar lançamentos financeiros"
                    >
                        <a
                            class="btn btn-outline-danger btn-sm d-inline-flex align-items-center gap-2"
                            href="/finance/export/pdf"
                            data-export-target="/finance/export/pdf"
                            data-bs-toggle="tooltip"
                            data-bs-placement="top"
                            title="Exportar lançamentos filtrados em PDF"
                            aria-label="Exportar lançamentos filtrados em PDF"
                            rel="noopener"
                        >
                            <i class="bi bi-filetype-pdf" aria-hidden="true"></i>
                            <span>Exportar PDF</span>
                        </a>
                        <a
                            class="btn btn-outline-success btn-sm d-inline-flex align-items-center gap-2"
                            href="/finance/export/excel"
                            data-export-target="/finance/export/excel"
                            data-bs-toggle="tooltip"
                            data-bs-placement="top"
                            title="Exportar lançamentos filtrados em Excel"
                            aria-label="Exportar lançamentos filtrados em Excel"
                            rel="noopener"
                        >
                            <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                            <span>Exportar Excel</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="table-responsive table-modern responsive-table">
                <table class="table align-middle mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Descrição</th>
                            <th>Tipo</th>
                            <th>Valor</th>
                            <th>Vencimento</th>
                            <th>Pagamento</th>
                            <th>Status</th>
                            <th class="text-center" style="width: 200px;">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% entries.forEach(entry => { %>
                            <tr>
                                <td><%= entry.id %></td>
                                <td><%= entry.description %></td>
                                <td>
                                    <% if (entry.type === 'payable') { %>
                                        <span class="badge text-bg-danger">Pagar</span>
                                    <% } else { %>
                                        <span class="badge text-bg-success">Receber</span>
                                    <% } %>
                                </td>
                                <td>R$ <%= entry.value %></td>
                                <td><%= entry.dueDate %></td>
                                <td><%= entry.paymentDate ? entry.paymentDate : '—' %></td>
                                <td><%= entry.status %></td>
                                <td>
                                    <div class="d-flex flex-wrap justify-content-center gap-2">
                                        <button
                                            type="button"
                                            class="btn btn-outline-primary btn-sm"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editFinanceModal<%= entry.id %>"
                                        >
                                            <i class="bi bi-pencil me-1"></i>Editar
                                        </button>

                                        <form
                                            action="/finance/delete/<%= entry.id %>?_method=DELETE"
                                            method="POST"
                                            class="d-inline"
                                        >
                                            <button class="btn btn-outline-danger btn-sm" type="submit">
                                                <i class="bi bi-trash me-1"></i>Excluir
                                            </button>
                                        </form>
                                    </div>

                                    <div
                                        class="modal fade"
                                        id="editFinanceModal<%= entry.id %>"
                                        tabindex="-1"
                                        aria-hidden="true"
                                    >
                                        <div class="modal-dialog">
                                            <form
                                                action="/finance/update/<%= entry.id %>?_method=PUT"
                                                method="POST"
                                                class="modal-content"
                                            >
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Editar Lançamento #<%= entry.id %></h5>
                                                    <button
                                                        type="button"
                                                        class="btn-close"
                                                        data-bs-dismiss="modal"
                                                        aria-label="Close"
                                                    ></button>
                                                </div>
                                                <div class="modal-body">
                                                    <input type="hidden" name="id" value="<%= entry.id %>" />

                                                    <div class="mb-3">
                                                        <label class="form-label">Descrição</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            name="description"
                                                            value="<%= entry.description %>"
                                                            required
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Tipo</label>
                                                        <select class="form-select" name="type" required>
                                                            <option value="payable" <%= entry.type === 'payable' ? 'selected' : '' %>>Pagar</option>
                                                            <option value="receivable" <%= entry.type === 'receivable' ? 'selected' : '' %>>Receber</option>
                                                        </select>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Valor (R$)</label>
                                                        <input
                                                            type="number"
                                                            step="0.01"
                                                            class="form-control"
                                                            name="value"
                                                            value="<%= entry.value %>"
                                                            required
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Data de Vencimento</label>
                                                        <input
                                                            type="date"
                                                            class="form-control"
                                                            name="dueDate"
                                                            value="<%= entry.dueDate %>"
                                                            required
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Data de Pagamento</label>
                                                        <input
                                                            type="date"
                                                            class="form-control"
                                                            name="paymentDate"
                                                            value="<%= entry.paymentDate ? entry.paymentDate : '' %>"
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Status</label>
                                                        <select class="form-select" name="status">
                                                            <option value="pending" <%= entry.status === 'pending' ? 'selected' : '' %>>Pendente</option>
                                                            <option value="paid" <%= entry.status === 'paid' ? 'selected' : '' %>>Pago</option>
                                                            <option value="overdue" <%= entry.status === 'overdue' ? 'selected' : '' %>>Atrasado</option>
                                                        </select>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Recorrência</label>
                                                        <select class="form-select" name="recurring">
                                                            <option value="true" <%= entry.recurring ? 'selected' : '' %>>Lançamento recorrente</option>
                                                            <option value="false" <%= !entry.recurring ? 'selected' : '' %>>Evento único</option>
                                                        </select>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Intervalo de recorrência</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            name="recurringInterval"
                                                            value="<%= entry.recurringInterval || '' %>"
                                                            placeholder="Ex.: mensal, trimestral"
                                                        />
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button
                                                        type="button"
                                                        class="btn btn-outline-secondary"
                                                        data-bs-dismiss="modal"
                                                    >
                                                        Cancelar
                                                    </button>
                                                    <button type="submit" class="btn btn-gradient">Salvar</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-12 col-xxl-10">
        <div class="card card-soft responsive-panel">
            <h3 class="fw-semibold mb-2">Novo lançamento</h3>
            <p class="text-muted mb-4">Cadastre receitas ou despesas com recorrência opcional e acompanhe tudo no painel.</p>
            <form action="/finance/create" method="POST" class="row g-3 responsive-filter-grid">
                <div class="col-md-5">
                    <label class="form-label">Descrição</label>
                    <input
                        type="text"
                        class="form-control"
                        name="description"
                        required
                        placeholder="Ex.: Pagamento fornecedor"
                    />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Tipo</label>
                    <select class="form-select" name="type" required>
                        <option value="payable">Pagar</option>
                        <option value="receivable">Receber</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Valor (R$)</label>
                    <input
                        type="number"
                        step="0.01"
                        class="form-control"
                        name="value"
                        required
                    />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Vencimento</label>
                    <input
                        type="date"
                        class="form-control"
                        name="dueDate"
                        required
                    />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Recorrência</label>
                    <select class="form-select" name="recurring">
                        <option value="false">Não recorrente</option>
                        <option value="true">Recorrente</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Intervalo (opcional)</label>
                    <input
                        type="text"
                        class="form-control"
                        name="recurringInterval"
                        placeholder="Ex.: mensal"
                    />
                </div>
                <div class="col-md-12">
                    <div class="responsive-form-actions">
                        <button type="reset" class="btn btn-outline-secondary">Limpar</button>
                        <button type="submit" class="btn btn-gradient">Criar lançamento</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const exportLinks = document.querySelectorAll('[data-export-target]');
        if (!exportLinks.length) {
            return;
        }

        const buildFiltersQuery = () => {
            if (typeof URLSearchParams === 'undefined') {
                return window.location.search ? window.location.search.replace(/^\?/, '') : '';
            }

            const params = new URLSearchParams(window.location.search || '');
            const filterForms = document.querySelectorAll('[data-filter-form]');

            filterForms.forEach((form) => {
                const fields = form.querySelectorAll('input[name], select[name], textarea[name]');
                fields.forEach((field) => {
                    const { name } = field;
                    if (!name) {
                        return;
                    }

                    const rawValue = typeof field.value === 'string' ? field.value.trim() : field.value;
                    if (rawValue) {
                        params.set(name, rawValue);
                    } else {
                        params.delete(name);
                    }
                });
            });

            return params.toString();
        };

        const applyQueryToLink = (link) => {
            const baseUrl = link.getAttribute('data-export-target');
            if (!baseUrl) {
                return;
            }

            const queryString = buildFiltersQuery();
            const finalUrl = queryString ? `${baseUrl}?${queryString}` : baseUrl;
            link.setAttribute('href', finalUrl);
        };

        exportLinks.forEach((link) => {
            applyQueryToLink(link);

            link.addEventListener('focus', () => applyQueryToLink(link));
            link.addEventListener('mouseenter', () => applyQueryToLink(link));
            link.addEventListener('click', () => applyQueryToLink(link));
            link.addEventListener('auxclick', (event) => {
                if (event.button === 1) {
                    applyQueryToLink(link);
                }
            });
        });
    });
</script>

<%- include('../partials/footer') %>
