<% const globalScope = Function('return this')(); %>
<% const requireFn = (typeof require === 'function')
    ? require
    : (globalScope && globalScope.process && globalScope.process.mainModule && typeof globalScope.process.mainModule.require === 'function'
        ? globalScope.process.mainModule.require.bind(globalScope.process.mainModule)
        : null); %>
<% const pathModule = requireFn ? requireFn('path') : null; %>
<% const fs = requireFn ? requireFn('fs') : null; %>
<% const ejsModule = requireFn ? requireFn('ejs') : null; %>
<% const templateDirectory = pathModule ? pathModule.join(process.cwd(), 'src', 'views', 'finance') : null; %>
<% const renderPartial = (relativePath) => {
    if (!requireFn || !pathModule || !fs || !ejsModule || !templateDirectory) {
        return '';
    }

    try {
        const partialPath = pathModule.resolve(templateDirectory, relativePath);
        const partialTemplate = fs.readFileSync(partialPath, 'utf8');
        return ejsModule.render(partialTemplate, locals, { filename: partialPath });
    } catch (partialError) {
        console.error('Erro ao renderizar partial de finanças:', partialError);
        return '';
    }
}; %>

<%- renderPartial('../partials/header.ejs') %>

<% const intervalOptions = Array.isArray(recurringIntervalOptions) ? recurringIntervalOptions : []; %>
<% const computedPeriodLabel = (typeof periodLabel === 'string' && periodLabel.trim())
    ? periodLabel.trim()
    : 'Todo o período'; %>
<% const defaultFilters = {
    startDate: '2024-05-01',
    endDate: '2024-05-31',
    type: 'receivable',
    status: 'paid'
}; %>
<% const rawFilters = (typeof filters !== 'undefined' && filters && typeof filters === 'object') ? filters : {}; %>
<% const filterValues = { ...defaultFilters, ...rawFilters }; %>
<% const ejsLocals = (typeof locals !== 'undefined' && locals) ? locals : {}; %>
<% const defaultSummaryTotals = {
    receivable: 3200.75,
    payable: 1850.25,
    net: 0,
    overdue: 450.2,
    paid: 2200.55,
    pending: 980.35
}; %>
<% const summaryTotalsSource = (typeof financeTotals === 'object' && financeTotals) ? financeTotals : {}; %>
<% const summaryTotals = { ...defaultSummaryTotals, ...summaryTotalsSource }; %>
<% summaryTotals.net = Number(summaryTotals.receivable || 0) - Number(summaryTotals.payable || 0); %>
<% const intlCurrencyFormatter = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }); %>
<% const formatCurrencyFn = (typeof ejsLocals.formatCurrency === 'function')
    ? ejsLocals.formatCurrency
    : (value) => intlCurrencyFormatter.format(Number(value) || 0); %>
<% const formatCurrency = formatCurrencyFn; %>
<% const netAmount = Number(summaryTotals.net || 0); %>
<% const netClass = netAmount > 0 ? 'text-success' : netAmount < 0 ? 'text-danger' : 'text-muted'; %>
<% const defaultMonthlySummary = [
    { month: '2024-04', receivable: 1600.50, payable: 920.15 },
    { month: '2024-05', receivable: 1600.25, payable: 930.10 }
]; %>
<% const monthlySummaryList = (typeof monthlySummary !== 'undefined' && Array.isArray(monthlySummary) && monthlySummary.length)
    ? monthlySummary
    : defaultMonthlySummary; %>
<% const hasMonthlySummary = monthlySummaryList.length > 0; %>
<% const summaryMonthly = monthlySummaryList; %>
<% const defaultStatusSummary = {
    receivable: { pending: 1200.4, paid: 1600.35, overdue: 400.0, cancelled: 0 },
    payable: { pending: 900.2, paid: 750.05, overdue: 200.0, cancelled: 0 }
}; %>
<% const statusSummaryData = (typeof statusSummary !== 'undefined' && typeof statusSummary === 'object' && statusSummary)
    ? statusSummary
    : defaultStatusSummary; %>
<% const summaryStatus = {
    payable: statusSummaryData.payable || {},
    receivable: statusSummaryData.receivable || {}
}; %>
<% const statusLabels = {
    pending: 'Pendente',
    paid: 'Pago',
    overdue: 'Atrasado',
    cancelled: 'Cancelado'
}; %>
<% const statusKeys = Object.keys(statusLabels); %>
<% const typeLabels = {
    receivable: 'Receber',
    payable: 'Pagar'
}; %>
<% const formatMonthLabel = (value) => {
    if (!value) {
        return '';
    }

    const safeValue = String(value);
    const isoDate = `${safeValue}-01T00:00:00`;
    const parsedDate = new Date(isoDate);

    if (Number.isFinite(parsedDate.getTime())) {
        return parsedDate.toLocaleDateString('pt-BR', { month: 'long', year: 'numeric' });
    }

    const parts = safeValue.split('-');
    if (parts.length === 2) {
        return `${parts[1]}/${parts[0]}`;
    }

    return safeValue;
}; %>

<datalist id="recurring-interval-options">
    <% intervalOptions.forEach((option) => { %>
        <option value="<%= option.value %>"><%= option.label %></option>
    <% }) %>
</datalist>

<div class="row fade-in responsive-page-row gy-4">
    <div class="col-12">
        <div class="card card-soft responsive-panel">
            <div class="d-flex flex-column flex-lg-row align-items-lg-center justify-content-between gap-3">
                <div>
                    <span class="app-chip mb-2"><i class="bi bi-cash-stack me-2"></i>Saúde financeira</span>
                    <h2 class="fw-semibold mb-2">Gerenciar finanças estratégicas</h2>
                    <p class="text-muted mb-0">
                        Acompanhe lançamentos, status e recorrências com visibilidade completa para decisões rápidas.
                    </p>
                </div>
                <div class="text-muted small text-lg-end">
                    Lançamentos cadastrados<br />
                    <span class="fw-semibold text-primary"><%= entries.length %></span>
                </div>
            </div>

            <% if (success_msg) { %>
                <div class="alert alert-success alert-auto mt-4" data-auto-dismiss="5000">
                    <i class="bi bi-check-circle me-2"></i><%= success_msg %>
                </div>
            <% } else if (error_msg) { %>
                <div class="alert alert-danger alert-auto mt-4" data-auto-dismiss="5000">
                    <i class="bi bi-exclamation-triangle me-2"></i><%= error_msg %>
                </div>
            <% } %>
        </div>
    </div>

    <div class="col-12 col-xxl-8">
        <div class="card card-soft responsive-panel">
            <div class="card-body">
                <div class="d-flex flex-column flex-lg-row justify-content-between gap-3 mb-3">
                    <div>
                        <h3 class="fw-semibold mb-1">Metas e projeções</h3>
                        <p class="text-muted mb-0">Acompanhe se o saldo projetado atende as metas mensais configuradas.</p>
                    </div>
                    <div class="text-lg-end">
                        <span class="badge rounded-pill bg-light text-muted me-2">
                            <i class="bi bi-calendar-week me-1"></i>
                            <%= projectionList.length %> períodos monitorados
                        </span>
                        <span class="badge rounded-pill <%= goalSummary && goalSummary.alerts ? 'bg-warning-subtle text-warning' : 'bg-success-subtle text-success' %>">
                            <i class="bi bi-bullseye me-1"></i>
                            <%= goalSummary && goalSummary.alerts ? `${goalSummary.alerts} meta(s) em atenção` : 'Metas sob controle' %>
                        </span>
                    </div>
                </div>

                <% if (alertsList.length) { %>
                    <div class="alert alert-warning border-0 d-flex align-items-center gap-2" role="alert">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                        <span>
                            <strong><%= alertsList.length %></strong>
                            <%= alertsList.length === 1 ? 'meta' : 'metas' %> com projeção abaixo do objetivo.
                        </span>
                    </div>
                <% } %>

                <div class="projection-highlight border rounded-3 p-3 bg-light-subtle mb-3">
                    <% if (highlightProjection) { %>
                        <% const highlightGoal = highlightProjection.goal || {}; %>
                        <% const highlightGap = (typeof highlightGoal.gapToGoal === 'number') ? highlightGoal.gapToGoal : null; %>
                        <% const gapLabel = highlightGap !== null ? `${highlightGap >= 0 ? '+' : '-'}${currencyFormatter.format(Math.abs(highlightGap))}` : '—'; %>
                        <% const gapClass = highlightGap !== null ? (highlightGap >= 0 ? 'text-success' : 'text-danger') : 'text-muted'; %>
                        <% const statusClass = highlightGoal.achieved === true ? 'badge bg-success-subtle text-success' : highlightGoal.achieved === false ? 'badge bg-danger-subtle text-danger' : 'badge bg-secondary-subtle text-secondary'; %>
                        <div class="d-flex flex-wrap align-items-center justify-content-between gap-3">
                            <div>
                                <p class="text-muted small mb-1">Próxima meta monitorada</p>
                                <h4 class="fw-semibold mb-0"><%= highlightProjection.label || highlightProjection.month %></h4>
                            </div>
                            <div class="text-end">
                                <div class="fw-semibold"><%= currencyFormatter.format(Number(highlightProjection.projected?.net || 0)) %></div>
                                <div class="text-muted small">
                                    Meta: <span class="fw-semibold"><%= highlightGoal.targetNetAmount !== null && highlightGoal.targetNetAmount !== undefined ? currencyFormatter.format(Number(highlightGoal.targetNetAmount)) : '—' %></span>
                                </div>
                                <div class="text-muted small">
                                    Diferença: <span class="fw-semibold <%= gapClass %>"><%= gapLabel %></span>
                                </div>
                                <span class="<%= statusClass %>">
                                    <%= highlightGoal.achieved === true ? 'Meta atingida' : highlightGoal.achieved === false ? 'Meta em risco' : 'Meta registrada' %>
                                </span>
                            </div>
                        </div>
                    <% } else { %>
                        <p class="text-muted small mb-0">Cadastre uma meta mensal para visualizar projeções detalhadas.</p>
                    <% } %>
                </div>

                <div class="table-responsive table-modern responsive-table">
                    <table class="table table-sm align-middle mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Mês</th>
                                <th>Saldo projetado</th>
                                <th>Meta líquida</th>
                                <th>Diferença</th>
                                <th class="text-center">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (!projectionList.length) { %>
                                <tr>
                                    <td colspan="5" class="text-center text-muted small">Nenhuma projeção disponível.</td>
                                </tr>
                            <% } else { %>
                                <% projectionList.forEach((item) => { %>
                                    <% const goal = item.goal || {}; %>
                                    <% const gapValue = (typeof goal.gapToGoal === 'number') ? goal.gapToGoal : null; %>
                                    <% const gapLabel = gapValue !== null ? `${gapValue >= 0 ? '+' : '-'}${currencyFormatter.format(Math.abs(gapValue))}` : '—'; %>
                                    <% const gapClass = gapValue !== null ? (gapValue >= 0 ? 'text-success' : 'text-danger') : 'text-muted'; %>
                                    <% const rowClass = item.needsAttention ? 'table-warning' : (item.isCurrent ? 'table-active' : ''); %>
                                    <% const statusLabel = goal.achieved === true ? 'Meta atingida' : goal.achieved === false ? 'Meta em risco' : goal.targetNetAmount !== null && goal.targetNetAmount !== undefined ? 'Meta registrada' : 'Sem meta'; %>
                                    <% const statusClass = goal.achieved === true ? 'badge bg-success-subtle text-success' : goal.achieved === false ? 'badge bg-danger-subtle text-danger' : goal.targetNetAmount !== null && goal.targetNetAmount !== undefined ? 'badge bg-secondary-subtle text-secondary' : 'badge bg-light text-muted'; %>
                                    <tr class="<%= rowClass %>">
                                        <td><%= item.label || item.month %></td>
                                        <td><%= currencyFormatter.format(Number(item.projected?.net || 0)) %></td>
                                        <td><%= goal.targetNetAmount !== null && goal.targetNetAmount !== undefined ? currencyFormatter.format(Number(goal.targetNetAmount)) : '—' %></td>
                                        <td class="<%= gapClass %>"><%= gapLabel %></td>
                                        <td class="text-center"><span class="<%= statusClass %>"><%= statusLabel %></span></td>
                                    </tr>
                                <% }) %>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-xxl-4">
        <div class="card card-soft responsive-panel h-100">
            <div class="card-body">
                <h4 class="fw-semibold mb-3">Configurar metas mensais</h4>
                <form action="/finance/goals" method="POST" class="row g-3">
                    <div class="col-12">
                        <label class="form-label">Mês da meta</label>
                        <input type="month" class="form-control" name="month" value="<%= highlightProjection ? highlightProjection.month : '' %>" required />
                    </div>
                    <div class="col-12">
                        <label class="form-label">Saldo líquido desejado (R$)</label>
                        <input type="number" step="0.01" min="0" class="form-control" name="targetNetAmount" placeholder="Ex.: 15000" required />
                    </div>
                    <div class="col-12">
                        <label class="form-label">Notas (opcional)</label>
                        <textarea class="form-control" name="notes" rows="2" maxlength="255" placeholder="Reforços ou observações"></textarea>
                    </div>
                    <div class="col-12 d-flex justify-content-end gap-2">
                        <button type="reset" class="btn btn-outline-secondary btn-sm">Limpar</button>
                        <button type="submit" class="btn btn-gradient btn-sm">Salvar meta</button>
                    </div>
                </form>

                <hr class="my-4" />

                <h5 class="fw-semibold mb-3">Metas cadastradas</h5>
                <% if (!financeGoals.length) { %>
                    <p class="text-muted small mb-0">Nenhuma meta cadastrada até o momento.</p>
                <% } else { %>
                    <div class="list-group list-group-flush">
                        <% financeGoals.forEach((goal) => { %>
                            <div class="list-group-item px-0">
                                <div class="d-flex flex-column gap-2">
                                    <div class="d-flex justify-content-between align-items-start gap-3">
                                        <div>
                                            <h6 class="fw-semibold mb-1"><%= goal.monthLabel %></h6>
                                            <p class="text-muted small mb-1">Meta: <span class="fw-semibold"><%= goal.formattedAmount %></span></p>
                                            <% if (goal.notes) { %>
                                                <p class="text-muted small mb-0"><i class="bi bi-chat-left-text me-1"></i><%= goal.notes %></p>
                                            <% } %>
                                        </div>
                                        <div class="d-flex gap-2">
                                            <button class="btn btn-outline-primary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#goalEdit<%= goal.id %>" aria-expanded="false" aria-controls="goalEdit<%= goal.id %>">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <form action="/finance/goals/<%= goal.id %>?_method=DELETE" method="POST" class="d-inline">
                                                <button class="btn btn-outline-danger btn-sm" type="submit">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="collapse" id="goalEdit<%= goal.id %>">
                                        <form action="/finance/goals" method="POST" class="row g-3 mt-2">
                                            <input type="hidden" name="goalId" value="<%= goal.id %>" />
                                            <div class="col-12">
                                                <label class="form-label">Mês</label>
                                                <input type="month" class="form-control" name="month" value="<%= goal.monthKey %>" required />
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label">Meta líquida (R$)</label>
                                                <input type="number" step="0.01" min="0" class="form-control" name="targetNetAmount" value="<%= goal.targetNetAmountInput %>" required />
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label">Notas</label>
                                                <textarea class="form-control" name="notes" rows="2" maxlength="255"><%= goal.notes %></textarea>
                                            </div>
                                            <div class="col-12 d-flex justify-content-end gap-2">
                                                <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="collapse" data-bs-target="#goalEdit<%= goal.id %>">Cancelar</button>
                                                <button type="submit" class="btn btn-gradient btn-sm">Atualizar meta</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="card card-soft responsive-panel">
            <div class="d-flex flex-wrap justify-content-between align-items-center gap-3 mb-3">
                <div>
                    <h3 class="fw-semibold mb-1">Lançamentos recentes</h3>
                    <p class="text-muted mb-0">Monitoramento contínuo de receitas, despesas e recorrências.</p>
                </div>
                <div class="card-body">
                    <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between gap-3 mb-3">
                        <div class="d-flex flex-wrap gap-2">
                            <span class="badge rounded-pill bg-success-subtle text-success-emphasis">
                                <i class="bi bi-plus-circle me-1" aria-hidden="true"></i>
                                <strong><%= importPreview.totals.new %></strong> novo(s)
                            </span>
                            <span class="badge rounded-pill bg-warning-subtle text-warning-emphasis">
                                <i class="bi bi-exclamation-circle me-1" aria-hidden="true"></i>
                                <strong><%= importPreview.totals.conflicting %></strong> conflito(s)
                            </span>
                            <span class="badge rounded-pill bg-secondary-subtle text-secondary-emphasis">
                                <i class="bi bi-list-check me-1" aria-hidden="true"></i>
                                <strong><%= importPreview.totals.total %></strong> registro(s)
                            </span>
                        </div>
                        <div class="text-muted small">
                            Ajuste as informações ou desmarque lançamentos conflitantes antes de importar.
                        </div>
                    </div>

                    <% if (importPreview.warnings && importPreview.warnings.length) { %>
                        <div class="alert alert-warning shadow-sm" role="alert">
                            <div class="d-flex align-items-start gap-3">
                                <i class="bi bi-info-circle fs-4" aria-hidden="true"></i>
                                <div>
                                    <h6 class="fw-semibold mb-2">Avisos de leitura</h6>
                                    <ul class="list-unstyled mb-0 small">
                                        <% importPreview.warnings.forEach(function(warning) { %>
                                            <li><i class="bi bi-dot me-1"></i><%= warning %></li>
                                        <% }); %>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    <% } %>

                    <form action="/finance/import/commit" method="POST" class="mt-4">
                        <div class="table-responsive table-modern responsive-table">
                            <table class="table align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th class="text-center">Importar</th>
                                        <th>Descrição</th>
                                        <th class="text-center">Tipo</th>
                                        <th>Valor (R$)</th>
                                        <th>Vencimento</th>
                                        <th>Pagamento</th>
                                        <th>Status</th>
                                        <th>Origem</th>
                                        <th class="text-center">Situação</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% importPreview.entries.forEach(function(entry, index) { %>
                                        <tr class="<%= entry.conflict ? 'table-warning' : '' %>">
                                            <td class="text-center">
                                                <div class="form-check form-switch d-inline-flex align-items-center justify-content-center">
                                                    <input
                                                        class="form-check-input"
                                                        type="checkbox"
                                                        name="entries[<%= index %>][include]"
                                                        value="1"
                                                        id="importEntry<%= index %>"
                                                        <%= entry.include ? 'checked' : '' %>
                                                    />
                                                </div>
                                                <input type="hidden" name="entries[<%= index %>][hash]" value="<%= entry.hash %>" />
                                            </td>
                                            <td>
                                                <input
                                                    type="text"
                                                    class="form-control form-control-sm"
                                                    name="entries[<%= index %>][description]"
                                                    value="<%= entry.description %>"
                                                    required
                                                />
                                            </td>
                                            <td class="text-center">
                                                <select class="form-select form-select-sm" name="entries[<%= index %>][type]" required>
                                                    <option value="payable" <%= entry.type === 'payable' ? 'selected' : '' %>>Pagar</option>
                                                    <option value="receivable" <%= entry.type === 'receivable' ? 'selected' : '' %>>Receber</option>
                                                </select>
                                            </td>
                                            <td>
                                                <div class="input-group input-group-sm">
                                                    <span class="input-group-text">R$</span>
                                                    <input
                                                        type="number"
                                                        class="form-control"
                                                        name="entries[<%= index %>][value]"
                                                        step="0.01"
                                                        min="0"
                                                        value="<%= Number(entry.value || 0).toFixed(2) %>"
                                                        required
                                                    />
                                                </div>
                                            </td>
                                            <td>
                                                <input
                                                    type="date"
                                                    class="form-control form-control-sm"
                                                    name="entries[<%= index %>][dueDate]"
                                                    value="<%= entry.dueDate %>"
                                                    required
                                                />
                                            </td>
                                            <td>
                                                <input
                                                    type="date"
                                                    class="form-control form-control-sm"
                                                    name="entries[<%= index %>][paymentDate]"
                                                    value="<%= entry.paymentDate ? entry.paymentDate : '' %>"
                                                />
                                            </td>
                                            <td>
                                                <select class="form-select form-select-sm" name="entries[<%= index %>][status]">
                                                    <option value="pending" <%= entry.status === 'pending' ? 'selected' : '' %>>Pendente</option>
                                                    <option value="paid" <%= entry.status === 'paid' ? 'selected' : '' %>>Pago</option>
                                                    <option value="overdue" <%= entry.status === 'overdue' ? 'selected' : '' %>>Em atraso</option>
                                                    <option value="cancelled" <%= entry.status === 'cancelled' ? 'selected' : '' %>>Cancelado</option>
                                                </select>
                                            </td>
                                            <td class="text-muted small">
                                                <% if (entry.metadata && entry.metadata.source) { %>
                                                    <span class="badge rounded-pill bg-secondary-subtle text-secondary-emphasis"><%= entry.metadata.source.toUpperCase() %></span>
                                                <% } %>
                                                <% if (entry.metadata && entry.metadata.line) { %>
                                                    <div>Linha <%= entry.metadata.line %></div>
                                                <% } else if (entry.metadata && entry.metadata.index) { %>
                                                    <div>Registro <%= entry.metadata.index %></div>
                                                <% } %>
                                            </td>
                                            <td class="text-center">
                                                <% if (entry.conflictReasons.length) { %>
                                                    <span class="badge bg-warning-subtle text-warning-emphasis d-inline-flex align-items-center gap-2 mb-2">
                                                        <i class="bi bi-exclamation-triangle" aria-hidden="true"></i>
                                                        Conflito
                                                    </span>
                                                    <div class="small text-muted text-start">
                                                        <% entry.conflictReasons.forEach(function(reason) { %>
                                                            <div><i class="bi bi-dot"></i><%= reason %></div>
                                                        <% }); %>
                                                    </div>
                                                <% } else { %>
                                                    <span class="badge bg-success-subtle text-success-emphasis d-inline-flex align-items-center gap-2">
                                                        <i class="bi bi-check-circle" aria-hidden="true"></i>
                                                        Novo
                                                    </span>
                                                <% } %>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>
                        <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3 mt-4">
                            <div class="text-muted small">
                                Importação preparada em <%= new Date(importPreview.uploadedAt).toLocaleString('pt-BR') %>.<br />
                                <span class="fw-semibold"><%= importPreview.totals.new %></span> lançamento(s) pronto(s) para importação.
                            </div>
                            <div class="d-flex flex-wrap gap-2">
                                <a href="/finance" class="btn btn-outline-secondary btn-sm">
                                    <i class="bi bi-x-circle me-1" aria-hidden="true"></i>
                                    Cancelar prévia
                                </a>
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="bi bi-cloud-arrow-down me-2" aria-hidden="true"></i>
                                    Importar lançamentos selecionados
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    <% } %>

    <div class="col-12">
        <div class="card card-soft responsive-panel">
            <div class="d-flex flex-column gap-4">
                <div>
                    <div class="d-flex flex-column flex-xl-row justify-content-between align-items-start gap-3 mb-3">
                        <div>
                            <span class="app-chip mb-2"><i class="bi bi-funnel me-2"></i>Filtros inteligentes</span>
                            <h3 class="fw-semibold mb-1">Visão consolidada</h3>
                            <p class="text-muted mb-0">
                                Período analisado: <span class="fw-semibold"><%= computedPeriodLabel %></span>
                            </p>
                        </div>
                        <div class="text-muted small">
                            Ajuste o período, o tipo e o status para refinar a análise e exportações.
                        </div>
                    </div>
                    <form
                        class="row g-3 align-items-end responsive-filter-grid"
                        data-filter-form
                        action="/finance"
                        method="GET"
                        novalidate
                    >
                        <div class="col-12 col-sm-6 col-lg-3 col-xxl-2">
                            <label class="form-label" for="filterStartDate">Início</label>
                            <input
                                type="date"
                                class="form-control"
                                id="filterStartDate"
                                name="startDate"
                                value="<%= filterValues.startDate || '' %>"
                            />
                        </div>
                        <div class="col-12 col-sm-6 col-lg-3 col-xxl-2">
                            <label class="form-label" for="filterEndDate">Fim</label>
                            <input
                                type="date"
                                class="form-control"
                                id="filterEndDate"
                                name="endDate"
                                value="<%= filterValues.endDate || '' %>"
                            />
                        </div>
                        <div class="col-12 col-sm-6 col-lg-3 col-xxl-2">
                            <label class="form-label" for="filterType">Tipo</label>
                            <select
                                class="form-select"
                                id="filterType"
                                name="type"
                                data-auto-submit="true"
                            >
                                <option value="" <%= filterValues.type ? '' : 'selected' %>>Todos</option>
                                <option value="payable" <%= filterValues.type === 'payable' ? 'selected' : '' %>>A pagar</option>
                                <option value="receivable" <%= filterValues.type === 'receivable' ? 'selected' : '' %>>A receber</option>
                            </select>
                        </div>
                        <div class="col-12 col-sm-6 col-lg-3 col-xxl-2">
                            <label class="form-label" for="filterStatus">Status</label>
                            <select
                                class="form-select"
                                id="filterStatus"
                                name="status"
                                data-auto-submit="true"
                            >
                                <option value="" <%= filterValues.status ? '' : 'selected' %>>Todos</option>
                                <option value="pending" <%= filterValues.status === 'pending' ? 'selected' : '' %>>Pendente</option>
                                <option value="paid" <%= filterValues.status === 'paid' ? 'selected' : '' %>>Pago</option>
                                <option value="overdue" <%= filterValues.status === 'overdue' ? 'selected' : '' %>>Atrasado</option>
                                <option value="cancelled" <%= filterValues.status === 'cancelled' ? 'selected' : '' %>>Cancelado</option>
                            </select>
                        </div>
                        <div class="col-12 col-xl-4 col-xxl-4 ms-auto">
                            <div class="d-flex flex-column flex-sm-row justify-content-end gap-2">
                                <button type="button" class="btn btn-outline-secondary w-100 w-sm-auto" data-filter-clear>
                                    Limpar
                                </button>
                                <button type="submit" class="btn btn-gradient w-100 w-sm-auto">
                                    Aplicar filtros
                                </button>
                            </div>
                        </div>
                    </form>
                </div>

                <div class="row g-4">
                    <div class="col-sm-6 col-xl-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between mb-3">
                                    <span class="badge rounded-pill bg-success-subtle text-success">Receitas</span>
                                    <i class="bi bi-arrow-up-right-circle text-success fs-4" aria-hidden="true"></i>
                                </div>
                                <h4 class="fw-semibold mb-1"><%= formatCurrency(summaryTotals.receivable) %></h4>
                                <p class="text-muted small mb-0">Entradas previstas no período selecionado.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between mb-3">
                                    <span class="badge rounded-pill bg-danger-subtle text-danger">Despesas</span>
                                    <i class="bi bi-arrow-down-right-circle text-danger fs-4" aria-hidden="true"></i>
                                </div>
                                <h4 class="fw-semibold mb-1"><%= formatCurrency(summaryTotals.payable) %></h4>
                                <p class="text-muted small mb-0">Saídas planejadas dentro do período.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between mb-3">
                                    <span class="badge rounded-pill bg-primary-subtle text-primary">Saldo</span>
                                    <i class="bi bi-wallet2 text-primary fs-4" aria-hidden="true"></i>
                                </div>
                                <h4 class="fw-semibold mb-1 <%= netClass %>"><%= formatCurrency(summaryTotals.net) %></h4>
                                <p class="text-muted small mb-0">Resultado projetado após receitas e despesas.</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xl-3">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between mb-3">
                                    <span class="badge rounded-pill bg-warning-subtle text-warning">Riscos</span>
                                    <i class="bi bi-exclamation-octagon text-warning fs-4" aria-hidden="true"></i>
                                </div>
                                <h4 class="fw-semibold mb-1 text-warning"><%= formatCurrency(summaryTotals.overdue) %></h4>
                                <p class="text-muted small mb-0">Pagamentos em atraso demandando atenção imediata.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row g-4 align-items-stretch">
                    <div class="col-12 col-lg-7">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body d-flex flex-column">
                                <div class="d-flex flex-wrap justify-content-between align-items-start gap-3 mb-3">
                                    <div>
                                        <h4 class="fw-semibold mb-1">Performance mensal</h4>
                                        <p class="text-muted small mb-0">Comparativo de entradas e saídas para decisões estratégicas.</p>
                                    </div>
                                    <span class="badge rounded-pill bg-light text-muted"><%= computedPeriodLabel %></span>
                                </div>
                                <div class="ratio ratio-16x9">
                                    <canvas
                                        id="financePerformanceChart"
                                        aria-label="Gráfico de desempenho financeiro mensal"
                                        role="img"
                                    ></canvas>
                                </div>
                                <% if (hasMonthlySummary) { %>
                                    <div class="table-responsive small mt-4">
                                        <table class="table table-sm align-middle mb-0">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Mês</th>
                                                    <th scope="col" class="text-end">A receber</th>
                                                    <th scope="col" class="text-end">A pagar</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% summaryMonthly.forEach((item) => { %>
                                                    <tr>
                                                        <td><%= formatMonthLabel(item.month) %></td>
                                                        <td class="text-end"><%= formatCurrency(item.receivable) %></td>
                                                        <td class="text-end"><%= formatCurrency(item.payable) %></td>
                                                    </tr>
                                                <% }) %>
                                            </tbody>
                                        </table>
                                    </div>
                                <% } else { %>
                                    <p class="text-muted small mt-4 mb-0">
                                        Cadastre lançamentos ou ajuste os filtros para visualizar tendências históricas.
                                    </p>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-lg-5">
                        <div class="card border-0 shadow-sm h-100">
                            <div class="card-body d-flex flex-column">
                                <div class="d-flex flex-wrap justify-content-between align-items-start gap-3 mb-3">
                                    <div>
                                        <h4 class="fw-semibold mb-1">Status por categoria</h4>
                                        <p class="text-muted small mb-0">Distribuição de valores em cada etapa.</p>
                                    </div>
                                    <span class="badge rounded-pill bg-light text-muted">Atualizado em tempo real</span>
                                </div>
                                <div class="table-responsive">
                                    <table class="table table-sm align-middle mb-3">
                                        <thead>
                                            <tr>
                                                <th scope="col">Tipo</th>
                                                <% statusKeys.forEach((statusKey) => { %>
                                                    <th scope="col" class="text-end"><%= statusLabels[statusKey] %></th>
                                                <% }) %>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% Object.keys(typeLabels).forEach((typeKey) => { %>
                                                <tr>
                                                    <td class="fw-semibold"><%= typeLabels[typeKey] %></td>
                                                    <% statusKeys.forEach((statusKey) => { %>
                                                        <% const statusValue = summaryStatus && summaryStatus[typeKey] ? summaryStatus[typeKey][statusKey] : 0; %>
                                                        <td class="text-end"><%= formatCurrency(statusValue) %></td>
                                                    <% }) %>
                                                </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="bg-light rounded-3 p-3 mt-auto">
                                    <div class="d-flex flex-column gap-2 small">
                                        <div class="d-flex justify-content-between">
                                            <span class="text-muted">Pagamentos liquidados</span>
                                            <span class="fw-semibold text-success"><%= formatCurrency(summaryTotals.paid) %></span>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-muted">Pendências</span>
                                            <span class="fw-semibold text-primary"><%= formatCurrency(summaryTotals.pending) %></span>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-muted">Atrasos</span>
                                            <span class="fw-semibold text-warning"><%= formatCurrency(summaryTotals.overdue) %></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="card card-soft responsive-panel">
            <div class="d-flex flex-wrap justify-content-between align-items-center gap-3 mb-3">
                <div>
                    <h3 class="fw-semibold mb-1">Lançamentos recentes</h3>
                    <p class="text-muted mb-0">Monitoramento contínuo de receitas, despesas e recorrências.</p>
                </div>
                <div class="d-flex flex-column flex-sm-row align-items-sm-center justify-content-end gap-2 text-sm-end">
                    <span class="badge rounded-pill bg-light text-muted">
                        <i class="bi bi-shield-lock me-2" aria-hidden="true"></i>Auditoria ativa
                    </span>
                    <div
                        class="d-flex flex-wrap align-items-center justify-content-end gap-2"
                        role="group"
                        aria-label="Exportar lançamentos financeiros"
                    >
                        <a
                            class="btn btn-outline-danger btn-sm d-inline-flex align-items-center gap-2"
                            href="/finance/export/pdf"
                            data-export-target="/finance/export/pdf"
                            data-bs-toggle="tooltip"
                            data-bs-placement="top"
                            title="Exportar lançamentos filtrados em PDF"
                            aria-label="Exportar lançamentos filtrados em PDF"
                            rel="noopener"
                        >
                            <i class="bi bi-filetype-pdf" aria-hidden="true"></i>
                            <span>Exportar PDF</span>
                        </a>
                        <a
                            class="btn btn-outline-success btn-sm d-inline-flex align-items-center gap-2"
                            href="/finance/export/excel"
                            data-export-target="/finance/export/excel"
                            data-bs-toggle="tooltip"
                            data-bs-placement="top"
                            title="Exportar lançamentos filtrados em Excel"
                            aria-label="Exportar lançamentos filtrados em Excel"
                            rel="noopener"
                        >
                            <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                            <span>Exportar Excel</span>
                        </a>
                    </div>
                </div>
            </div>
            <div class="table-responsive table-modern responsive-table">
                <table class="table align-middle mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th>ID</th>
                            <th>Descrição</th>
                            <th>Tipo</th>
                            <th>Valor</th>
                            <th>Vencimento</th>
                            <th>Pagamento</th>
                            <th>Status</th>
                            <th class="text-center" style="width: 200px;">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% entries.forEach(entry => { %>
                            <tr>
                                <td><%= entry.id %></td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <span class="fw-semibold"><%= entry.description %></span>
                                        <% if (entry.attachments && entry.attachments.length) { %>
                                            <span class="text-muted small">
                                                <i class="bi bi-paperclip me-1" aria-hidden="true"></i>
                                                <%= entry.attachments.length %> anexo<%= entry.attachments.length > 1 ? 's' : '' %>
                                            </span>
                                        <% } %>
                                    </div>
                                </td>
                                <td>
                                    <% if (entry.type === 'payable') { %>
                                        <span class="badge text-bg-danger">Pagar</span>
                                    <% } else { %>
                                        <span class="badge text-bg-success">Receber</span>
                                    <% } %>
                                </td>
                                <td>R$ <%= entry.value %></td>
                                <td><%= entry.dueDate %></td>
                                <td><%= entry.paymentDate ? entry.paymentDate : '—' %></td>
                                <td><%= entry.status %></td>
                                <td>
                                    <div class="d-flex flex-wrap justify-content-center gap-2">
                                        <button
                                            type="button"
                                            class="btn btn-outline-primary btn-sm"
                                            data-bs-toggle="modal"
                                            data-bs-target="#editFinanceModal<%= entry.id %>"
                                        >
                                            <i class="bi bi-pencil me-1"></i>Editar
                                        </button>

                                        <form
                                            action="/finance/delete/<%= entry.id %>?_method=DELETE"
                                            method="POST"
                                            class="d-inline"
                                        >
                                            <button class="btn btn-outline-danger btn-sm" type="submit">
                                                <i class="bi bi-trash me-1"></i>Excluir
                                            </button>
                                        </form>
                                    </div>

                                    <div
                                        class="modal fade"
                                        id="editFinanceModal<%= entry.id %>"
                                        tabindex="-1"
                                        aria-hidden="true"
                                    >
                                        <div class="modal-dialog">
                                            <form
                                                action="/finance/update/<%= entry.id %>?_method=PUT"
                                                method="POST"
                                                enctype="multipart/form-data"
                                                class="modal-content"
                                            >
                                                <div class="modal-header">
                                                    <h5 class="modal-title">Editar Lançamento #<%= entry.id %></h5>
                                                    <button
                                                        type="button"
                                                        class="btn-close"
                                                        data-bs-dismiss="modal"
                                                        aria-label="Close"
                                                    ></button>
                                                </div>
                                                <div class="modal-body">
                                                    <input type="hidden" name="id" value="<%= entry.id %>" />

                                                    <div class="mb-3">
                                                        <label class="form-label">Descrição</label>
                                                        <input
                                                            type="text"
                                                            class="form-control"
                                                            name="description"
                                                            value="<%= entry.description %>"
                                                            required
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Tipo</label>
                                                        <select class="form-select" name="type" required>
                                                            <option value="payable" <%= entry.type === 'payable' ? 'selected' : '' %>>Pagar</option>
                                                            <option value="receivable" <%= entry.type === 'receivable' ? 'selected' : '' %>>Receber</option>
                                                        </select>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Valor (R$)</label>
                                                        <input
                                                            type="number"
                                                            step="0.01"
                                                            class="form-control"
                                                            name="value"
                                                            value="<%= entry.value %>"
                                                            required
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Data de Vencimento</label>
                                                        <input
                                                            type="date"
                                                            class="form-control"
                                                            name="dueDate"
                                                            value="<%= entry.dueDate %>"
                                                            required
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Data de Pagamento</label>
                                                        <input
                                                            type="date"
                                                            class="form-control"
                                                            name="paymentDate"
                                                            value="<%= entry.paymentDate ? entry.paymentDate : '' %>"
                                                        />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Status</label>
                                                        <select class="form-select" name="status">
                                                            <option value="pending" <%= entry.status === 'pending' ? 'selected' : '' %>>Pendente</option>
                                                            <option value="paid" <%= entry.status === 'paid' ? 'selected' : '' %>>Pago</option>
                                                            <option value="overdue" <%= entry.status === 'overdue' ? 'selected' : '' %>>Atrasado</option>
                                                        </select>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Recorrência</label>
                                                        <select class="form-select" name="recurring">
                                                            <option value="true" <%= entry.recurring ? 'selected' : '' %>>Lançamento recorrente</option>
                                                            <option value="false" <%= !entry.recurring ? 'selected' : '' %>>Evento único</option>
                                                        </select>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Intervalo de recorrência</label>
                                                    <input
                                                        type="text"
                                                        class="form-control"
                                                        name="recurringInterval"
                                                        list="recurring-interval-options"
                                                        value="<%= entry.recurringInterval || '' %>"
                                                        placeholder="Ex.: mensal, trimestral"
                                                    />
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label">Anexos cadastrados</label>
                                                        <% if (entry.attachments && entry.attachments.length) { %>
                                                            <ul class="list-group list-group-flush rounded shadow-sm">
                                                                <% entry.attachments.forEach((attachment) => { %>
                                                                    <li class="list-group-item d-flex align-items-center justify-content-between gap-3">
                                                                        <div class="d-flex align-items-center gap-2 text-truncate">
                                                                            <i class="bi bi-paperclip text-primary" aria-hidden="true"></i>
                                                                            <span class="text-truncate" title="<%= attachment.fileName %>"><%= attachment.fileName %></span>
                                                                        </div>
                                                                        <div class="d-flex flex-column flex-sm-row align-items-sm-center gap-2 text-sm-end">
                                                                            <span class="text-muted small"><%= Math.max(1, Math.round((attachment.size || 0) / 1024)) %> KB</span>
                                                                            <a
                                                                                class="btn btn-outline-primary btn-sm"
                                                                                href="/finance/attachments/<%= attachment.id %>/download"
                                                                            >
                                                                                <i class="bi bi-download me-1" aria-hidden="true"></i>Baixar
                                                                            </a>
                                                                        </div>
                                                                    </li>
                                                                <% }); %>
                                                            </ul>
                                                        <% } else { %>
                                                            <p class="text-muted small mb-0">Nenhum anexo disponível para este lançamento.</p>
                                                        <% } %>
                                                    </div>
                                                    <div class="mb-3">
                                                        <label class="form-label" for="entry-attachments-<%= entry.id %>">
                                                            Adicionar novos anexos
                                                        </label>
                                                        <input
                                                            type="file"
                                                            class="form-control"
                                                            id="entry-attachments-<%= entry.id %>"
                                                            name="attachments"
                                                            multiple
                                                            accept=".pdf,.png,.jpg,.jpeg,.doc,.docx,.xls,.xlsx,.csv,.txt,.zip"
                                                        />
                                                        <div class="form-text">
                                                            Anexe arquivos relevantes (até 10MB por arquivo).
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button
                                                        type="button"
                                                        class="btn btn-outline-secondary"
                                                        data-bs-dismiss="modal"
                                                    >
                                                        Cancelar
                                                    </button>
                                                    <button type="submit" class="btn btn-gradient">Salvar</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-12 col-xxl-10">
        <div class="card card-soft responsive-panel">
            <h3 class="fw-semibold mb-2">Novo lançamento</h3>
            <p class="text-muted mb-4">Cadastre receitas ou despesas com recorrência opcional e acompanhe tudo no painel.</p>
            <form action="/finance/create" method="POST" enctype="multipart/form-data" class="row g-3 responsive-filter-grid">
                <div class="col-md-5">
                    <label class="form-label">Descrição</label>
                    <input
                        type="text"
                        class="form-control"
                        name="description"
                        required
                        placeholder="Ex.: Pagamento fornecedor"
                    />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Tipo</label>
                    <select class="form-select" name="type" required>
                        <option value="payable">Pagar</option>
                        <option value="receivable">Receber</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Valor (R$)</label>
                    <input
                        type="number"
                        step="0.01"
                        class="form-control"
                        name="value"
                        required
                    />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Vencimento</label>
                    <input
                        type="date"
                        class="form-control"
                        name="dueDate"
                        required
                    />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Recorrência</label>
                    <select class="form-select" name="recurring">
                        <option value="false">Não recorrente</option>
                        <option value="true">Recorrente</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Intervalo (opcional)</label>
                    <input
                        type="text"
                        class="form-control"
                        name="recurringInterval"
                        list="recurring-interval-options"
                        placeholder="Ex.: mensal"
                    />
                </div>
                <div class="col-md-6">
                    <label class="form-label" for="new-entry-attachments">Anexar documentos</label>
                    <input
                        type="file"
                        class="form-control"
                        id="new-entry-attachments"
                        name="attachments"
                        multiple
                        accept=".pdf,.png,.jpg,.jpeg,.doc,.docx,.xls,.xlsx,.csv,.txt,.zip"
                    />
                    <div class="form-text">
                        Upload seguro com limite de 10MB por arquivo. Tipos aceitos: PDF, imagens e documentos do Office.
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="responsive-form-actions">
                        <button type="reset" class="btn btn-outline-secondary">Limpar</button>
                        <button type="submit" class="btn btn-gradient">Criar lançamento</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script
    src="https://cdn.jsdelivr.net/npm/chart.js@4.4.4/dist/chart.umd.min.js"
    referrerpolicy="no-referrer"
    defer
></script>
<script>
    const rawMonthlySummary = <%- JSON.stringify(summaryMonthly) %>;
    const monthlySummaryData = Array.isArray(rawMonthlySummary) ? rawMonthlySummary : [];
    const chartCurrencyFormatter = new Intl.NumberFormat('pt-BR', {
        style: 'currency',
        currency: 'BRL'
    });

    document.addEventListener('DOMContentLoaded', () => {
        const filterForms = document.querySelectorAll('[data-filter-form]');
        const exportLinks = document.querySelectorAll('[data-export-target]');

        const buildFiltersQuery = (scope) => {
            if (typeof URLSearchParams === 'undefined') {
                return window.location.search ? window.location.search.replace(/^\?/, '') : '';
            }

            const params = new URLSearchParams(window.location.search || '');
            const forms = scope ? [scope] : Array.from(document.querySelectorAll('[data-filter-form]'));

            forms.filter(Boolean).forEach((form) => {
                const fields = form.querySelectorAll('input[name], select[name], textarea[name]');
                fields.forEach((field) => {
                    if (!field || !field.name) {
                        return;
                    }

                    const rawValue = typeof field.value === 'string' ? field.value.trim() : field.value;
                    if (rawValue) {
                        params.set(field.name, rawValue);
                    } else {
                        params.delete(field.name);
                    }
                });
            });

            return params.toString();
        };

        const submitFormWithFilters = (form) => {
            if (!form) {
                return;
            }

            const action = form.getAttribute('action') || window.location.pathname || '/finance';
            const queryString = buildFiltersQuery(form);
            const finalUrl = queryString ? `${action}?${queryString}` : action;

            window.location.assign(finalUrl);
        };

        const applyQueryToLink = (link) => {
            const baseUrl = link.getAttribute('data-export-target');
            if (!baseUrl) {
                return;
            }

            const queryString = buildFiltersQuery();
            const finalUrl = queryString ? `${baseUrl}?${queryString}` : baseUrl;
            link.setAttribute('href', finalUrl);
        };

        const refreshExportLinks = () => {
            if (!exportLinks.length) {
                return;
            }

            exportLinks.forEach((link) => {
                applyQueryToLink(link);

                if (!link.__financeExportListenersBound) {
                    link.addEventListener('focus', () => applyQueryToLink(link));
                    link.addEventListener('mouseenter', () => applyQueryToLink(link));
                    link.addEventListener('click', () => applyQueryToLink(link));
                    link.addEventListener('auxclick', (event) => {
                        if (event.button === 1) {
                            applyQueryToLink(link);
                        }
                    });
                    link.__financeExportListenersBound = true;
                }
            });
        };

        filterForms.forEach((form) => {
            form.addEventListener('submit', (event) => {
                event.preventDefault();
                submitFormWithFilters(form);
            });

            const clearButton = form.querySelector('[data-filter-clear]');
            if (clearButton) {
                clearButton.addEventListener('click', (event) => {
                    event.preventDefault();
                    form.reset();
                    submitFormWithFilters(form);
                });
            }

            const fields = form.querySelectorAll('input[name], select[name], textarea[name]');
            fields.forEach((field) => {
                if (!field) {
                    return;
                }

                const updateExportTargets = () => refreshExportLinks();
                field.addEventListener('input', updateExportTargets);
                field.addEventListener('change', () => {
                    updateExportTargets();

                    if (field.dataset.autoSubmit === 'true') {
                        submitFormWithFilters(form);
                    }
                });
            });
        });

        refreshExportLinks();

        const chartElement = document.getElementById('financePerformanceChart');

        const formatChartMonthLabel = (value) => {
            if (!value) {
                return '';
            }

            const safeValue = String(value);
            const isoDate = `${safeValue}-01T00:00:00`;
            const parsedDate = new Date(isoDate);

            if (Number.isFinite(parsedDate.getTime())) {
                return parsedDate.toLocaleDateString('pt-BR', { month: 'short', year: 'numeric' });
            }

            const parts = safeValue.split('-');
            if (parts.length === 2) {
                return `${parts[1]}/${parts[0]}`;
            }

            return safeValue;
        };

        const renderFinanceChart = () => {
            if (!chartElement || typeof window.Chart === 'undefined') {
                return false;
            }

            const context = chartElement.getContext('2d');
            if (!context) {
                return false;
            }

            const labels = monthlySummaryData.map((item) => formatChartMonthLabel(item.month));
            const receivableData = monthlySummaryData.map((item) => {
                const value = Number.parseFloat(item?.receivable ?? 0);
                return Number.isFinite(value) ? value : 0;
            });
            const payableData = monthlySummaryData.map((item) => {
                const value = Number.parseFloat(item?.payable ?? 0);
                return Number.isFinite(value) ? value : 0;
            });

            if (chartElement.__financeChartInstance) {
                chartElement.__financeChartInstance.destroy();
            }

            chartElement.__financeChartInstance = new window.Chart(context, {
                type: 'line',
                data: {
                    labels,
                    datasets: [
                        {
                            label: 'A receber',
                            data: receivableData,
                            borderColor: '#198754',
                            backgroundColor: 'rgba(25, 135, 84, 0.15)',
                            tension: 0.35,
                            fill: true,
                            pointRadius: 4,
                            pointBackgroundColor: '#198754'
                        },
                        {
                            label: 'A pagar',
                            data: payableData,
                            borderColor: '#dc3545',
                            backgroundColor: 'rgba(220, 53, 69, 0.15)',
                            tension: 0.35,
                            fill: true,
                            pointRadius: 4,
                            pointBackgroundColor: '#dc3545'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    },
                    plugins: {
                        legend: {
                            position: 'bottom'
                        },
                        tooltip: {
                            callbacks: {
                                label: (context) => {
                                    const value = Number.isFinite(context.parsed?.y) ? context.parsed.y : 0;
                                    return `${context.dataset.label}: ${chartCurrencyFormatter.format(value)}`;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            ticks: {
                                maxRotation: 0,
                                minRotation: 0
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: (value) => {
                                    const numeric = Number(value);
                                    return chartCurrencyFormatter.format(Number.isFinite(numeric) ? numeric : 0);
                                }
                            }
                        }
                    }
                }
            });

            return true;
        };

        if (chartElement && monthlySummaryData.length) {
            const chartRendered = renderFinanceChart();
            if (!chartRendered) {
                window.addEventListener('load', renderFinanceChart, { once: true });
            }
        }
    });
</script>

<%- renderPartial('../partials/footer.ejs') %>
